//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.03.30 at 07:55:07 PM CEST 
//


package org.ethernet_powerlink;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ProfileClassID_DataType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ProfileClassID_DataType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AIP"/>
 *     &lt;enumeration value="Process"/>
 *     &lt;enumeration value="InformationExchange"/>
 *     &lt;enumeration value="Resource"/>
 *     &lt;enumeration value="Device"/>
 *     &lt;enumeration value="CommunicationNetwork"/>
 *     &lt;enumeration value="Equipment"/>
 *     &lt;enumeration value="Human"/>
 *     &lt;enumeration value="Material"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ProfileClassID_DataType")
@XmlEnum
public enum ProfileClassIDDataType {

    AIP("AIP"),
    @XmlEnumValue("Process")
    PROCESS("Process"),
    @XmlEnumValue("InformationExchange")
    INFORMATION_EXCHANGE("InformationExchange"),
    @XmlEnumValue("Resource")
    RESOURCE("Resource"),
    @XmlEnumValue("Device")
    DEVICE("Device"),
    @XmlEnumValue("CommunicationNetwork")
    COMMUNICATION_NETWORK("CommunicationNetwork"),
    @XmlEnumValue("Equipment")
    EQUIPMENT("Equipment"),
    @XmlEnumValue("Human")
    HUMAN("Human"),
    @XmlEnumValue("Material")
    MATERIAL("Material");
    private final String value;

    ProfileClassIDDataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProfileClassIDDataType fromValue(String v) {
        for (ProfileClassIDDataType c: ProfileClassIDDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
